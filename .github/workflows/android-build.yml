name: Android Build

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Create local.properties
      run: echo "sdk.dir=$ANDROID_HOME" > local.properties

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Fix Gradle wrapper
      run: |
        rm -f gradle/wrapper/gradle-wrapper.jar
        # Try downloading from multiple sources
        curl -L -f -o gradle/wrapper/gradle-wrapper.jar "https://downloads.gradle.org/distributions/gradle-8.10.2-wrapper.jar" || \
        curl -L -f -o gradle/wrapper/gradle-wrapper.jar "https://services.gradle.org/distributions/gradle-8.10.2-wrapper.jar" || \
        wget -O gradle/wrapper/gradle-wrapper.jar "https://downloads.gradle.org/distributions/gradle-8.10.2-wrapper.jar"
        # Verify the downloaded file is valid
        file gradle/wrapper/gradle-wrapper.jar
        chmod +x gradlew

    - name: Build Debug APK (with wrapper)
      run: ./gradlew assembleDebug --stacktrace --no-daemon
      continue-on-error: true

    - name: Build Debug APK (with system gradle)
      if: failure()
      run: |
        echo "Wrapper failed, trying system gradle"
        sudo apt-get update
        sudo apt-get install -y gradle
        gradle assembleDebug --stacktrace --no-daemon

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: termux-ai-debug-apk
        path: app/build/outputs/apk/debug/*.apk
        retention-days: 7

    - name: List build output
      if: always()
      run: |
        echo "=== Build Output Directory ==="
        find app/build/outputs -name "*.apk" -type f || echo "No APK files found"
        ls -la app/build/outputs/apk/debug/ || echo "Debug directory not found"